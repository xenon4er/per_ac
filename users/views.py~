from django.shortcuts import render_to_response
from django.contrib import auth
from django.http import HttpResponseRedirect
from django.contrib.auth.models import User
from per_ac.users.models import *

from django.template import RequestContext
from django.core.context_processors import csrf

from django.views.decorators.csrf import csrf_protect

@csrf_protect
def registr(request):
   
    c = RequestContext(request, {
     'foo': 'bar',
	 })
    
    #c.update(csrf(request))
        
    errors_registr = []
    
    if request.method == 'POST':
        if not request.POST.get('uname',''):
            errors_registr.append('enter name')
        if not request.POST.get('password',''):
            errors_registr.append('enter pass')
        if not request.POST.get('email',''):
            errors_registr.append('enter name')
            
        if not errors_registr:
            uname = request.POST['uname']
            passw = request.POST['password']
            email = request.POST['email']
            user = User.objects.create_user(uname, email, passw)
            user.is_staf = True
            user.save()
            prof = UserProfile(user=user)
            prof.save()
            return HttpResponseRedirect('/welcome/')

    return render_to_response('regist.html',{'errors':errors_registr},c)

@csrf_protect    
def login(request):
    c1 = RequestContext(request, {
    	'foo': 'bar',
	 })
    #c.update(csrf(request))
    errors_login = []
    if request.user.is_authenticated():
        return HttpResponseRedirect('/welcome/')
        
    if request.method == 'POST':
        if not request.POST.get('uname',''):
            errors_login.append('enter name')
        if not request.POST.get('password',''):
            errors_login.append('enter pass')
        
        if not errors_login:
            uname = request.POST['uname']
            passw = request.POST['password']
            user = auth.authenticate(username=uname, password=passw)
            if user is not None and user.is_active:
                auth.login(request, user)
            return HttpResponseRedirect('/welcome/')
         
    return render_to_response('login.html',{'errors':errors_login},c1)


def logout(request):
    auth.logout(request)
    return HttpResponseRedirect('/welcome/')    
    
#def edit_user(request):
	
